// Generated by CoffeeScript 1.7.1
(function() {
  var d, get_checkbox, get_item_state, get_text_input, handle_checkbox_change, input_ids, load_state, render_item, render_state, save_state, to_array, update_input_render_state;

  d = document;

  input_ids = ['first', 'second', 'third'];

  to_array = function(sequential_thing) {
    return Array.prototype.slice.call(sequential_thing);
  };

  update_input_render_state = function(checkbox) {
    var text_input;
    text_input = checkbox.nextSibling;
    return text_input.style.textDecoration = checkbox.checked ? 'line-through' : '';
  };

  handle_checkbox_change = function(event) {
    var checkbox;
    checkbox = event.target;
    update_input_render_state(checkbox);
    return save_state();
  };

  get_checkbox = function(i) {
    return d.getElementById(input_ids[i] + '_status');
  };

  get_text_input = function(i) {
    return d.getElementById(input_ids[i] + '_text');
  };

  get_item_state = function(i) {
    return {
      checked: get_checkbox(i).checked,
      text: get_text_input(i).value
    };
  };

  save_state = function() {
    var i, today;
    today = (function() {
      var _i, _results;
      _results = [];
      for (i = _i = 0; _i <= 2; i = ++_i) {
        _results.push(get_item_state(i));
      }
      return _results;
    })();
    localStorage.setItem('today', JSON.stringify(today));
    return console.log('Saved state:', today);
  };

  render_item = function(item, i) {
    var checkbox;
    get_text_input(i).value = item.text;
    checkbox = get_checkbox(i);
    checkbox.checked = item.checked;
    return update_input_render_state(checkbox);
  };

  load_state = function() {
    var today_json;
    today_json = localStorage.getItem('today');
    if (today_json !== null) {
      return JSON.parse(today_json);
    } else {
      return console.log('State not present in localStorage');
    }
  };

  render_state = function(state) {
    var i, item, _i, _len, _results;
    _results = [];
    for (i = _i = 0, _len = state.length; _i < _len; i = ++_i) {
      item = state[i];
      _results.push(render_item(item, i));
    }
    return _results;
  };

  d.addEventListener('DOMContentLoaded', function() {
    var input, inputs, _i, _j, _len, _len1, _results;
    render_state(load_state());
    inputs = to_array(d.getElementsByTagName('input'));
    for (_i = 0, _len = inputs.length; _i < _len; _i++) {
      input = inputs[_i];
      input.addEventListener('change', save_state);
    }
    _results = [];
    for (_j = 0, _len1 = inputs.length; _j < _len1; _j++) {
      input = inputs[_j];
      if (input.type === 'checkbox') {
        _results.push(input.addEventListener('change', handle_checkbox_change));
      }
    }
    return _results;
  });

}).call(this);
